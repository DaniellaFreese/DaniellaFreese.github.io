<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>spiffe on Danny Freese - Coding for a Living</title><link>https://DaniellaFreese.github.io/tags/spiffe/</link><description>Recent content in spiffe on Danny Freese - Coding for a Living</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 14 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://DaniellaFreese.github.io/tags/spiffe/index.xml" rel="self" type="application/rss+xml"/><item><title>What Is Spiffe and How is it used in Kuma Mesh</title><link>https://DaniellaFreese.github.io/article/mesh/kuma-mesh-what-is-spiffe/</link><pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate><guid>https://DaniellaFreese.github.io/article/mesh/kuma-mesh-what-is-spiffe/</guid><description>&lt;strong>Situation:&lt;/strong> One of the first features everyone wants from a Service Mesh is to take advantage of the &lt;code>Zero Trust / mTLS&lt;/code> that comes right out of the box. When you start to wondering into how this is all feasible in the world of workloads dynamically being created, destroyed, autoscaling the question becomes how does it all work?</description></item></channel></rss>